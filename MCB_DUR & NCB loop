#This is trying to capture missed call back time and if no call back a 1 is placed in the NCB column to be able to tally how many calls were missed 
import re
import pandas as pd
from dateutil import parser

# Import the DataFrame from your source (e.g., CSV file, database)
# sheet1_df = pd.read_excel('Call_reports4.xlsx', sheet_name='Sheet1')
# sheet2_df = pd.read_excel('Call_reports4.xlsx', sheet_name='Sheet2')
# sheet3_df = pd.read_excel('Call_reports4.xlsx', sheet_name='Sheet3')
combined_df = pd.read_excel('Call_reports4.xlsx', sheet_name='Sheet4')

# combined_df = pd.concat([sheet1_df, sheet2_df, sheet3_df], ignore_index=True)
# print(combined_df[:5])
#
# Null values dealt with
combined_df['NurseID'].fillna('PAT', inplace=True)
# parse time format
combined_df['Start Time'] = combined_df['Start Time'].apply(parser.parse)
combined_df['End Time'] = combined_df['End Time'].apply(parser.parse)

combined_df['Start Time'] = pd.to_datetime(combined_df['Start Time'])
combined_df['End Time'] = pd.to_datetime(combined_df['End Time'])

# print(combined_df['Start Time'] [:5])


# Adding Missed_phn column Function
def phone_number_missed(combined_df):
    combined_df['Missed_phn'] = ""
    condition = (combined_df['NurseID'] == 'PAT') & (combined_df['Duration'] < 1) & (
            combined_df['Direction'] == 'INBOUND')
    combined_df.loc[condition, 'Missed_phn'] = combined_df['From']
    return combined_df


# ADD Missed_phn to combined_df and return new comb_df1
combined_df1 = phone_number_missed(combined_df)
print(combined_df1[1:30])

# Creation of MCB_dur and NCB
# Assume 'combined_df1' is your DataFrame with columns 'Missed_phn', 'To', 'End Time', and 'MCB_dur'
combined_df1['MCB_dur'] = ''
combined_df1['NCB'] = ''

#MCB_dur and NCB loop(im getting the correct call back time however im also getting duration times i don't need as well.
def calculate_mcb_dur_and_ncb(df, missed_phn_col, to_col, start_time_col, end_time_col, mcb_dur_col, ncb_col):
    # Iterate over each row in the DataFrame
    for i, row in df.iterrows():
        missed_phn = row[missed_phn_col]
        end_time = row[end_time_col]

        if pd.notnull(missed_phn):
            # Find the matching 'To' value in the rows below the current row
            matching_rows = df.loc[i + 1:].loc[df[to_col].astype(str).apply(lambda x: bool(re.match(re.escape(missed_phn[-12:]),x)))]

            if not matching_rows.empty:
                # Get the row index of the first match
                match_index = matching_rows.index[0]

                # Calculate the duration and assign it to MCB_dur column
                start_time = df.loc[match_index, start_time_col]
                if pd.notnull(start_time) and pd.notnull(end_time):
                    duration = start_time - end_time
                    df.at[match_index, mcb_dur_col] = duration.total_seconds()
            else:
                # No match found, place 1 in NCB column
                df.at[i, ncb_col] = 1
    # Call the function to calculate MCB_dur and NCB

    return combined_df1


result = calculate_mcb_dur_and_ncb(combined_df1, 'Missed_phn', 'To', 'Start Time', 'End Time', 'MCB_dur', 'NCB')
print(result)

# Convert MCB_dur to seconds
print(combined_df1[1:30])
